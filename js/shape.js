"use strict";

class Shape {
    constructor(x, y, w, h, shape, out, t_expl) {
        this.x = x;
        this.dir = 0;
        this.y = y;
        this.w = w;
        this.h = h;
        this.shape = shape; // index into this.mp[]-eg. 0 is plane, 1 plane left, etc.
        this.out = out;
        this.t_expl = t_expl;

        this.mp = [[[0, 0, 0, 1, 0, 0, 0],  // 0 plane -> array of color values
                    [0, 0, 0, 1, 0, 0, 0],  //  indexed into clr array in color.js
                    [0, 0, 0, 1, 0, 0, 0],  // plane is 7 pixels wide x 14 pixels tall
                    [0, 0, 1, 1, 1, 0, 0],  // show(..) draw image to fit specified w (width) & h (height)!
                    [0, 1, 1, 1, 1, 1, 0],
                    [1, 1, 1, 1, 1, 1, 1],
                    [1, 1, 1, 1, 1, 1, 1],
                    [1, 1, 0, 1, 0, 1, 1],
                    [1, 0, 0, 1, 0, 0, 1],
                    [0, 0, 0, 1, 0, 0, 0],
                    [0, 0, 1, 1, 1, 0, 0],
                    [0, 1, 1, 1, 1, 1, 0],
                    [0, 1, 0, 1, 0, 1, 0],
                    [0, 1, 0, 1, 0, 1, 0]],

                   [[0, 0, 0, 1, 0, 0, 0],  // 1 plane left
                    [0, 0, 0, 1, 0, 0, 0],
                    [0, 0, 0, 1, 0, 0, 0],
                    [0, 0, 1, 1, 0, 0, 0],
                    [0, 1, 1, 1, 1, 0, 0],
                    [0, 1, 1, 1, 1, 1, 0],
                    [0, 1, 1, 1, 1, 1, 0],
                    [0, 1, 0, 1, 1, 1, 0],
                    [0, 0, 0, 1, 0, 1, 0],
                    [0, 0, 0, 1, 0, 0, 0],
                    [0, 0, 1, 1, 0, 0, 0],
                    [0, 1, 1, 1, 1, 0, 0],
                    [0, 1, 0, 1, 1, 1, 0],
                    [0, 0, 0, 0, 0, 1, 0]],

                   [[0, 0, 0, 1, 0, 0, 0],  // 2 plane right
                    [0, 0, 0, 1, 0, 0, 0],
                    [0, 0, 0, 1, 0, 0, 0],
                    [0, 0, 0, 1, 1, 0, 0],
                    [0, 0, 1, 1, 1, 1, 0],
                    [0, 1, 1, 1, 1, 1, 0],
                    [0, 1, 1, 1, 1, 1, 0],
                    [0, 1, 1, 1, 0, 1, 0],
                    [0, 1, 0, 1, 0, 0, 0],
                    [0, 0, 0, 1, 0, 0, 0],
                    [0, 0, 0, 1, 1, 0, 0],
                    [0, 0, 1, 1, 1, 1, 0],
                    [0, 1, 1, 1, 0, 1, 0],
                    [0, 1, 0, 0, 0, 0, 0]],

                   [[0, 0, 0, 0, 0, 4, 4, 4],  // 3 helicopter right 0
                    [0, 0, 0, 4, 4, 4, 0, 0],
                    [0, 0, 0, 0, 0, 4, 0, 0],
                    [0, 0, 0, 0, 5, 5, 5, 0],
                    [5, 0, 0, 5, 5, 5, 5, 5],
                    [6, 6, 6, 6, 6, 6, 6, 6],
                    [6, 6, 6, 6, 6, 6, 6, 6],
                    [5, 0, 0, 0, 5, 5, 5, 0],
                    [0, 0, 0, 0, 0, 5, 0, 0],
                    [0, 0, 0, 0, 5, 5, 5, 0]],

                   [[0, 0, 0, 4, 4, 4, 0, 0],  // 4 helicopter right 1
                    [0, 0, 0, 0, 0, 4, 4, 4],
                    [0, 0, 0, 0, 0, 4, 0, 0],
                    [0, 0, 0, 0, 5, 5, 5, 0],
                    [5, 0, 0, 5, 5, 5, 5, 5],
                    [6, 6, 6, 6, 6, 6, 6, 6],
                    [6, 6, 6, 6, 6, 6, 6, 6],
                    [5, 0, 0, 0, 5, 5, 5, 0],
                    [0, 0, 0, 0, 0, 5, 0, 0],
                    [0, 0, 0, 0, 5, 5, 5, 0]],


                   [[4, 4, 4, 0, 0, 0, 0, 0],  // 5 helicopter left <- 0
                    [0, 0, 4, 4, 4, 0, 0, 0],
                    [0, 0, 4, 0, 0, 0, 0, 0],
                    [0, 5, 5, 5, 0, 0, 0, 0],
                    [5, 5, 5, 5, 5, 0, 0, 5],
                    [6, 6, 6, 6, 6, 6, 6, 6],
                    [6, 6, 6, 6, 6, 6, 6, 6],
                    [0, 5, 5, 5, 0, 0, 0, 5],
                    [0, 0, 5, 0, 0, 0, 0, 0],
                    [0, 5, 5, 5, 0, 0, 0, 0]],

                   [[0, 0, 4, 4, 4, 0, 0, 0],  // 6 helicopter left <- 1
                    [4, 4, 4, 0, 0, 0, 0, 0],
                    [0, 0, 4, 0, 0, 0, 0, 0],
                    [0, 5, 5, 5, 0, 0, 0, 0],
                    [5, 5, 5, 5, 5, 0, 0, 5],
                    [6, 6, 6, 6, 6, 6, 6, 6],
                    [6, 6, 6, 6, 6, 6, 6, 6],
                    [0, 5, 5, 5, 0, 0, 0, 5],
                    [0, 0, 5, 0, 0, 0, 0, 0],
                    [0, 5, 5, 5, 0, 0, 0, 0]],

                   [[0, 0, 0, 7, 7, 0, 0, 0, 0],   // 7 ship right ->
                    [0, 0, 0, 7, 7, 0, 0, 0, 0],
                    [0, 0, 7, 7, 7, 0, 0, 0, 0],
                    [0, 7, 7, 7, 7, 7, 0, 0, 0],
                    [8, 8, 8, 8, 8, 8, 8, 8, 8],
                    [8, 8, 8, 8, 8, 8, 8, 8, 0],
                    [9, 9, 9, 9, 9, 9, 9, 0, 0],
                    [0, 9, 9, 9, 9, 9, 9, 0, 0]],

                   [[0, 0, 0, 0, 7, 7, 0, 0, 0],  // 8 ship left <-
                    [0, 0, 0, 0, 7, 7, 0, 0, 0],
                    [0, 0, 0, 0, 7, 7, 7, 0, 0],
                    [0, 0, 0, 7, 7, 7, 7, 7, 0],
                    [8, 8, 8, 8, 8, 8, 8, 8, 8],
                    [0, 8, 8, 8, 8, 8, 8, 8, 8],
                    [0, 0, 9, 9, 9, 9, 9, 9, 9],
                    [0, 0, 9, 9, 9, 9, 9, 9, 0]],

                   [[0,   0,  0,  0,  0,  0, 22],   // 9 airplane e
                    [0,  22, 22,  0,  0, 22, 22],
                    [21, 21, 21, 21, 21, 21, 21],
                    [21, 21, 21,  0,  0, 21,  0],
                    [0,   0, 21, 21, 21,  0,  0],
                    [0,   0,  0, 21, 21,  0,  0]],

                   [[22,  0,  0,  0,  0,  0,  0],   // 10 airplane d
                    [22, 22,  0,  0, 22, 22,  0],
                    [21, 21, 21, 21, 21, 21, 21],
                    [0,  21,  0,  0, 21, 21, 21],
                    [0,   0, 21, 21, 21,  0,  0],
                    [0,   0, 21, 21,  0,  0,  0]],

                   [[0,  12, 12, 12, 12, 12,  0],   // 11 fuel (gasoline)
                    [12, 12,  0,  0,  0, 12, 12],
                    [12, 12,  0, 12, 12, 12, 12],
                    [12, 12,  0,  0, 12, 12, 12],
                    [12, 12,  0, 12, 12, 12, 12],
                    [12, 12,  0, 12, 12, 12, 12],
                    [13, 13, 13, 13, 13, 13, 13],
                    [13, 13,  0, 13,  0, 13, 13],
                    [13, 13,  0, 13,  0, 13, 13],
                    [13, 13,  0, 13,  0, 13, 13],
                    [13, 13,  0,  0,  0, 13, 13],
                    [13, 13, 13, 13, 13, 13, 13],
                    [12, 12,  0,  0,  0, 12, 12],
                    [12, 12,  0, 12, 12, 12, 12],
                    [12, 12,  0,  0, 12, 12, 12],
                    [12, 12,  0, 12, 12, 12, 12],
                    [12, 12,  0,  0,  0, 12, 12],
                    [12, 12, 12, 12, 12, 12, 12],
                    [13, 13,  0, 13, 13, 13, 13],
                    [13, 13,  0, 13, 13, 13, 13],
                    [13, 13,  0, 13, 13, 13, 13],
                    [13, 13,  0, 13, 13, 13, 13],
                    [13, 13,  0,  0,  0, 13, 13],
                    [13, 13, 13, 13, 13, 13, 13]],

                   [[0, 0, 0, 0, 0, 8, 0, 0],     // 12 explosion 1
                    [0, 0, 0, 8, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 8, 0],
                    [8, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 6, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 1, 0, 4],
                    [0, 4, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 4, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 4, 0],
                    [9, 0, 0, 0, 1, 0, 0, 0],
                    [0, 0, 9, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 9, 0, 0]],

                   [[0, 0, 15, 0, 0, 0],                // 13 explosion 2
                    [0, 0, 0, 0, 15, 0],
                    [15, 0, 0, 0, 0, 0],
                    [0, 0, 0, 15, 0, 0],
                    [0, 15, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 15],
                    [0, 0, 9, 0, 0, 0],
                    [0, 0, 0, 0, 9, 0]],

                   [[0,   0,  7,  7,  7,  0,  0,  0],   // 14 home
                    [0,   7,  7,  7,  7,  7,  0,  0],
                    [7,   7,  7,  7,  7,  7,  7,  0],
                    [13, 13, 13, 13, 13, 13, 13,  0],
                    [13,  0, 13,  0, 13,  0, 13,  0],
                    [13,  0, 13,  0, 13,  0, 13,  0],
                    [13, 13, 13, 13, 13, 13, 13,  0],
                    [0,   0,  0,  0,  0,  0,  0,  0],
                    [0,   0,  0,  0,  0, 15,  0,  0],
                    [0,   0,  0,  0,  0, 15,  0,  0],
                    [0,   0,  0,  0, 15, 15, 15,  0],
                    [0,   0,  0, 15, 15, 15, 15, 15],
                    [0,   0,  0,  0, 15, 15, 15,  0],
                    [0,   0,  0,  0,  0, 16,  0,  0],
                    [0,   0,  0,  0,  0, 16,  0, 0]]]
    }

    show() {
        let obj = this.shape;
        if (this.t_expl > 20) obj = 12;
        else if (this.t_expl) obj = 13;

        noStroke();
        for (let col=0; col<this.mp[obj][0].length; col++) {
            for (let lin=0; lin<this.mp[obj].length; lin++) {
                if (this.mp[obj][lin][col] && (!this.out || this.t_expl)) {
                    let x = this.x + col * Math.round(this.w/this.mp[obj][0].length);
                    let y = this.y + lin * Math.round(this.h/this.mp[obj].length);
                    let w = Math.round(this.w/this.mp[obj][0].length);
                    let h = Math.round(this.h/this.mp[obj].length);
                    fill(clr[this.mp[obj][lin][col]]);
                    rect(x, y, w, h);
                }
            }
        }
        if (this.t_expl) this.t_expl -= 1;
    }
}